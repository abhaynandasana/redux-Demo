{"ast":null,"code":"import { createStore } from \"redux\";\nimport counterSlice from \"./CounterSlice\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\"; // const counterReduce = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + action.num,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - action.num,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return state;\n// };\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["/home/lcom/Documents/react js/18 Diving into Redux (An Alternative To The Context API)/01-starting-project/src/store/index.js"],"names":["createStore","counterSlice","createSlice","configureStore","store","reducer","counter","auth","authSlice"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGD,cAAc,CAAC;AAC3BE,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEL,YAAY,CAACI,OAAxB;AAAiCE,IAAAA,IAAI,EAAEC,SAAS,CAACH;AAAjD;AADkB,CAAD,CAA5B;AAIA,eAAeD,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport counterSlice from \"./CounterSlice\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\n// const counterReduce = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + action.num,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - action.num,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return state;\n// };\n\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}