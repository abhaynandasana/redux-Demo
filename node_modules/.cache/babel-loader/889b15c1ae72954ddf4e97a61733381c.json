{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\nconst counterReduce = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + action.num,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - action.num,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReduce);\nexport default store;","map":{"version":3,"sources":["/home/lcom/Documents/react js/18 Diving into Redux (An Alternative To The Context API)/01-starting-project/src/store/index.js"],"names":["createStore","initialState","counter","showCounter","counterReduce","state","action","type","num","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;;AACA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACtD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,GAD3B;AAELL,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAFd,KAAP;AAID;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,GAD3B;AAELL,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAFd,KAAP;AAID;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLJ,MAAAA,WAAW,EAAE,CAACE,KAAK,CAACF,WADf;AAELD,MAAAA,OAAO,EAAEG,KAAK,CAACH;AAFV,KAAP;AAID;;AACD,SAAOG,KAAP;AACD,CApBD;;AAsBA,MAAMI,KAAK,GAAGT,WAAW,CAACI,aAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\nconst initialState = { counter: 0, showCounter: true };\nconst counterReduce = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + action.num,\n      showCounter: state.showCounter,\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - action.num,\n      showCounter: state.showCounter,\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter,\n    };\n  }\n  return state;\n};\n\nconst store = createStore(counterReduce);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}