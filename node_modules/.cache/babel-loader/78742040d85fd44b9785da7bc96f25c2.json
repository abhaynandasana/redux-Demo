{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst counterInitialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: counterInitialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increse(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    backToZero(state) {\n      state.counter = 0;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default counterSlice;","map":{"version":3,"sources":["/home/lcom/Documents/react js/18 Diving into Redux (An Alternative To The Context API)/01-starting-project/src/store/CounterSlice.js"],"names":["createSlice","counterInitialState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increse","action","payload","backToZero","toggleCounter","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEL,mBAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KAHO;;AAIRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KANO;;AAORS,IAAAA,OAAO,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACrBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,UAAU,CAACL,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,CAAhB;AACD,KAZO;;AAaRa,IAAAA,aAAa,CAACN,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACD;;AAfO;AAHmB,CAAD,CAAhC;AAsBE,OAAO,MAAMa,cAAc,GAAGZ,YAAY,CAACa,OAApC;AAEP,eAAeb,YAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst counterInitialState = { counter: 0, showCounter: true };\n\nconst counterSlice = createSlice({\n    name: \"counter\",\n    initialState: counterInitialState,\n    reducers: {\n      increment(state) {\n        state.counter++;\n      },\n      decrement(state) {\n        state.counter--;\n      },\n      increse(state, action) {\n        state.counter = state.counter + action.payload;\n      },\n      backToZero(state) {\n        state.counter = 0;    \n      },\n      toggleCounter(state) {\n        state.showCounter = !state.showCounter;\n      },\n    },\n  });\n\n  export const counterActions = counterSlice.actions;\n\n  export default counterSlice;"]},"metadata":{},"sourceType":"module"}